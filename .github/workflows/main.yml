name: CI/CD Pipeline
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs: 
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/myapp:$GITHUB_SHA .
          docker tag ${{ secrets.DOCKER_USERNAME }}/myapp:$GITHUB_SHA ${{ secrets.DOCKER_USERNAME }}/myapp:latest

      - name: Push Docker image to DockerHub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/myapp:$GITHUB_SHA
          docker push ${{ secrets.DOCKER_USERNAME }}/myapp:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Deploy to AWS EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_ACCESS_KEY_ID }}
          username: ubuntu
          key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          script: |
            echo "Pulling latest Docker image..."
            docker pull ${{ secrets.DOCKER_USERNAME }}/myapp:latest

            echo "Stopping and removing existing container..."
            docker stop myapp || true
            docker rm myapp || true

            echo "Force stopping any process using port 80..."
            sudo lsof -t -i:80 | xargs sudo kill -9 || true

            echo "Removing any old Docker network conflicts..."
            docker network prune -f

            echo "Running new container..."
            docker run -d --name myapp -p 80:80 ${{ secrets.DOCKER_USERNAME }}/myapp:latest
